generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                     String        @id @unique
  email                  String        @unique
  stripeCustomerId       String?       @unique @map("stripe_customer_id")
  stripeSubscriptionId   String?       @unique @map("stripe_subscription_id")
  stripePriceId          String?       @map("stripe_price_id")
  stripeCurrentPeriodEnd DateTime?     @map("stripe_current_period_end")
  File                   File[]
  Message                Message[]
  CardMeaning            CardMeaning[]
}

model File {
  id           String       @id @default(cuid())
  title        String       @unique
  question     String?
  name         String
  color        String
  type         String
  createdAt    DateTime     @default(now())
  cards        String[]
  uploadStatus UploadStatus @default(PENDING)
  userId       String?
  messages     Message[]
  User         User?        @relation(fields: [userId], references: [id])
}

model Message {
  id            String   @id @default(cuid())
  text          String
  isUserMessage Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userId        String?
  fileId        String?
  User          User?    @relation(fields: [userId], references: [id])
  File          File?    @relation(fields: [fileId], references: [id])
}

model CardMeaning {
  id              String  @id @default(cuid())
  meaning         String
  reversedMeaning String
  slug            String
  name            String
  userId          String?
  User            User?   @relation(fields: [userId], references: [id])
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}
